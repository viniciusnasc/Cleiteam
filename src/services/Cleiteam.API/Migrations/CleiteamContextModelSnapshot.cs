// <auto-generated />
using System;
using Cleiteam.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cleiteam.API.Migrations
{
    [DbContext(typeof(CleiteamContext))]
    partial class CleiteamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cleiteam.Domain.Entities.ComentarioImagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdImagem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdImagem");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ComentariosImagem");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.ImagemOcorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdOcorrencia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdOcorrencia");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ImagensOcorrencia", (string)null);
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.Ocorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdTipoOcorrencia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("Decimal(8,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("Decimal(9,6)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoOcorrencia");

                    b.ToTable("Ocorrencias", (string)null);
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.TipoOcorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposOcorrencia", (string)null);
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.UsuarioConfiguracao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Alcance")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("ReceberNotificacao")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UsuarioConfiguracoes", (string)null);
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.UsuarioOcorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdOcorrencia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Responsavel")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdOcorrencia");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioOcorrencias", (string)null);
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.ComentarioImagem", b =>
                {
                    b.HasOne("Cleiteam.Domain.Entities.ImagemOcorrencia", "Imagem")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdImagem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Cleiteam.Domain.Entities.UsuarioConfiguracao", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.ImagemOcorrencia", b =>
                {
                    b.HasOne("Cleiteam.Domain.Entities.Ocorrencia", "Ocorrencia")
                        .WithMany("Imagens")
                        .HasForeignKey("IdOcorrencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cleiteam.Domain.Entities.UsuarioConfiguracao", "Usuario")
                        .WithMany("Imagens")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.Ocorrencia", b =>
                {
                    b.HasOne("Cleiteam.Domain.Entities.TipoOcorrencia", "TipoOcorrencia")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("IdTipoOcorrencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoOcorrencia");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.UsuarioOcorrencia", b =>
                {
                    b.HasOne("Cleiteam.Domain.Entities.Ocorrencia", "Ocorrencia")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdOcorrencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cleiteam.Domain.Entities.UsuarioConfiguracao", "Usuario")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.ImagemOcorrencia", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.Ocorrencia", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.TipoOcorrencia", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("Cleiteam.Domain.Entities.UsuarioConfiguracao", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Imagens");

                    b.Navigation("Ocorrencias");
                });
#pragma warning restore 612, 618
        }
    }
}
